library("tictoc")
tic()
tail(x,5)
exectime <- toc()
exectime <- exectime$toc - exectime$tic
exectime
?head
head(x,-5)
head(x,5)
1:10
##time for tail
install.packages("tictoc")
library("tictoc")
tic()
tail(x,5)
exectime <- toc()
exectime <- exectime$toc - exectime$tic
exectime
vec=(30:60)/10
vec
vec=(30:60)/10
vecVals=c()
for (i in vec){
j = e^i*cos(i)
vecVals=c(vecVals,j)
}
vecVals
vec=(30:60)/10
vecVals=c()
for (i in vec){
j = e^i*cos(i)
j
vecVals=c(vecVals,j)
}
vecVals
vec=(30:60)/10
vecVals=c()
for (i in vec){
j = exp(i)*cos(i)
vecVals=c(vecVals,j)
}
vecVals
x=1:10
##time for tail
install.packages("tictoc")
library("tictoc")
tic()
tail(x,5)
exectime <- toc()
exectime <- exectime$toc - exectime$tic
exectime
x=1:10
##time for tail
install.packages("tictoc")
library("tictoc")
tic()
tail(x,5)
exectime <- toc()
exectime <- exectime$toc - exectime$tic
exectime
pairvec = c()
for (i in 1:20){
for (j in i:20){
pairvec=cbind(pairvec,c(i,j))
}
}
pairvec
f.bad = function(x, y) {
z1 = 2*x + y
z2 = x + 2*y
z3 = 2*x + 2*y
z4 = x/y
}
f.bad(1,2)
f.bad = function(x, y) {
z1 = 2*x + y
z2 = x + 2*y
z3 = 2*x + 2*y
z4 <- x/y
}
f.bad(1,2)
f.bad = function(x, y) {
z1 = 2*x + y
z2 = x + 2*y
z3 <- 2*x + 2*y
z4 <- x/y
}
f.bad(1,2)
f.bad <- function(x, y) {
z1 = 2*x + y
z2 = x + 2*y
z3 <- 2*x + 2*y
z4 <- x/y
}
f.bad(1,2)
collatz = function(n){
if(n<0){
if(n%%2==0){
return n/2
} else{
return 3*n+1
}
}else{
print "WHYYYYYYY??? Your number isn't positive!"
}
}
}
collatz = function(n){
if(n<0){
if(n%%2==0){
return n/2
} else{
return 3*n+1
}
}else{
print "WHYYYYYYY??? Your number isn't positive!"
}
}
}
collatz(1)
f.collatz = function(n){
if(n<0){
if(n%%2==0){
return n/2
} else{
return 3*n+1
}
}else{
print "WHYYYYYYY??? Your number isn't positive!"
}
}
}
collatz(1)
f.collatz = function(n){
if(n<0){
if(n%%2==0){
return(n/2)
} else{
return(3*n+1)
}
}else{
print("WHYYYYYYY??? Your number isn't positive!")
}
}
}
collatz(1)
f.collatz = function(n){
if(n>0){
if(n%%2==0){
return(n/2)
} else{
return(3*n+1)
}
}else{
print("WHYYYYYYY??? Your number isn't positive!")
}
}
collatz(1)
collatz = function(n){
if(n>0){
if(n%%2==0){
return(n/2)
} else{
return(3*n+1)
}
}else{
print("WHYYYYYYY??? Your number isn't positive!")
}
}
collatz(1)
collatz(collatz(collatz(collatz(collatz(10)))))
collatz = function(n){
if(n>0){
if(n%%2==0){
return(n/2)
} else{
return(3*n+1)
}
}else{
print("WHYYYYYYY??? Your number isn't positive!")
}
}
n = 30
for(i in 1:100){
n = collatz(n)
}
}
n = 30
for(i in 1:100){
n = collatz(n)
}
}
n = 30
for(i in 1:100){
n = collatz(n)
}
}
{}
}
n = 30
for(i in 1:100){
n = collatz(n)
}
n = 30
for(i in 1:100){
n = collatz(n)
}
n = 30
for(i in 1:100){
n = collatz(n)
}
n
n = 30
for(i in 1:100){
n = collatz(n)
}
n
n = 30
for(i in 1:1000){
n = collatz(n)
}
n
n = 30
for(i in 1:1001){
n = collatz(n)
}
n
n = 30
for(i in 1:1002){
n = collatz(n)
}
n
n = 30
for(i in 1:1003){
n = collatz(n)
}
n
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
}
hist(iterationsVector)
iterations
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
iterations
}
hist(iterationsVector)
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
iterations
}
hist(iterationsVector)
}
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
iterations
}
hist(iterationsVector)
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
print(iterations)
}
hist(iterationsVector)
?hist
iterationsVector = c()
for(i in 1:100){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
print(iterations)
}
hist(iterationsVector, breaks = 100)
iterationsVector = c()
for(i in 1:1000){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
print(iterations)
}
hist(iterationsVector, breaks = 100)
iterationsVector = c()
for(i in 1:1000){
n = i
iterations = 0
while(n != 1 & n != 2 & n != 4){
n = collatz(n)
iterations = iterations + 1
}
iterationsVector = c(iterationsVector, iterations)
print(iterations)
}
hist(iterationsVector, breaks = 1000)
cubesum = function(n){
marker = n^(1/3)
markerL = integer(marker)
pairs = c()
for (i in 1:markerL){
for (j in i:markerL){
if (i^3 + j^3 = n){
pairs=cbind(pairs,c(i,j))
}
}
}
}
cubesum(35)
cubesum = function(n){
marker = n^(1/3)
markerL = integer(marker)
pairs = c()
for (i in 1:markerL){
for (j in i:markerL){
if (i^3 + j^3 == n){
pairs=cbind(pairs,c(i,j))
}
}
}
}
cubesum(35)
integer(3.999)
int(3.9)
cel(3.9)
cubesum = function(n){
marker = n^(1/3)
markerL = ceiling(marker)
pairs = c()
for (i in 1:markerL){
for (j in i:markerL){
if (i^3 + j^3 == n){
pairs=cbind(pairs,c(i,j))
}
}
}
}
cubesum(35)
cubesum(35)
cubesum = function(n){
marker = n^(1/3)
markerL = ceiling(marker)
pairs = c()
for (i in 1:markerL){
for (j in i:markerL){
if (i^3 + j^3 == n){
pairs=cbind(pairs,c(i,j))
}
}
}
return pairs
}
cubesum(35)
cubesum = function(n){
marker = n^(1/3)
markerL = ceiling(marker)
pairs = c()
for (i in 1:markerL){
for (j in i:markerL){
if (i^3 + j^3 == n){
pairs=cbind(pairs,c(i,j))
}
}
}
return (pairs)
}
cubesum(35)
iter=0
while length(cubesum(iter))<2{
iter=iter+1
}
print (cubesum(iter))
length(c())
iter=0
while length(cubesum(iter))<2{
iter=iter+1
}
print (cubesum(iter))
##smallest number with two cubes
iter=0
while (length(cubesum(iter))<2){
iter=iter+1
}
print (cubesum(iter))
##smallest number with two cubes
iter=1
while (length(cubesum(iter))<2){
iter=iter+1
}
print (cubesum(iter))
cubesum(1)
length(cbind(c(1,1),c(2,2)))
iter=1
while (length(cubesum(iter))<4){
iter=iter+1
}
print (cubesum(iter))
print (iter)
##
fib = function(n){
if (n<=0){
return ("Error")
} else if (n<=2) {
return (1)
} else {
return(fib(n-1)+fib(n-2))
}
}
fib(5)
##
fib = function(n){
if (n<=0){
return ("Error")
} else if (n<=2) {
return (1)
} else {
return(fib(n-1)+fib(n-2))
}
}
fib(7)
##
fib_test = function(n,k){
div_vec=c()
if (fib(n)%%k==0){
div_vec = c(div_vec,TRUE)
} else {
div_vec = c(div_vec, FALSE)
}
return div_vec
}
fib_test(20,3)
## int, int -> vector of logicals
##
fib_test = function(n,k){
div_vec=c()
if (fib(n)%%k==0){
div_vec = c(div_vec,TRUE)
} else {
div_vec = c(div_vec, FALSE)
}
return (div_vec)
}
fib_test(20,3)
## int, int -> vector of logicals
##
fib_test = function(n,k){
div_vec=c()
for (i in 1:n){
if (fib(i)%%k==0){
div_vec = c(div_vec,TRUE)
} else {
div_vec = c(div_vec, FALSE)
}
}
return (div_vec)
}
fib_test(20,3)
fib_test(20,4)
fib_test(100,7)
fib_test(30,7)
fib_test(20,4)
fib_test(20,5)
fib_test(20,6)
fib_test(25,6)
x=1:10
##time for tail
install.packages("tictoc")
library("tictoc")
tic()
tail(x,5)
exectime <- toc()
exectime <- exectime$toc - exectime$tic
exectime
